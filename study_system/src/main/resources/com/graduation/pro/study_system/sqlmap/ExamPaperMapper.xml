<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.graduation.pro.study_system.mapper.ExamPaperMapper" >
  <resultMap id="BaseResultMap" type="com.graduation.pro.study_system.pojo.ExamPaper" >
    <id column="Exam_paper_id" property="examPaperId" jdbcType="INTEGER" />
    <result column="Creator" property="creator" jdbcType="VARCHAR" />
    <result column="Value_Rate" property="valueRate" jdbcType="REAL" />
    <result column="Examed_Count" property="examedCount" jdbcType="INTEGER" />
    <result column="Create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="Exam_paper_name" property="examPaperName" jdbcType="VARCHAR" />
    <result column="limit_time" property="limitTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Exam_paper_id, Creator, Value_Rate, Examed_Count, Create_time, Exam_paper_name, limit_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.graduation.pro.study_system.pojo.ExamPaperExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam_paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="page != null" >
      limit #{page.begin} , #{page.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exam_paper
    where Exam_paper_id = #{examPaperId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exam_paper
    where Exam_paper_id = #{examPaperId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.graduation.pro.study_system.pojo.ExamPaperExample" >
    delete from exam_paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.graduation.pro.study_system.pojo.ExamPaper" >
    insert into exam_paper (Exam_paper_id, Creator, Value_Rate, 
      Examed_Count, Create_time, Exam_paper_name, 
      limit_time)
    values (#{examPaperId,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR}, #{valueRate,jdbcType=REAL}, 
      #{examedCount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{examPaperName,jdbcType=VARCHAR}, 
      #{limitTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.graduation.pro.study_system.pojo.ExamPaper" >
    insert into exam_paper
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="examPaperId != null" >
        Exam_paper_id,
      </if>
      <if test="creator != null" >
        Creator,
      </if>
      <if test="valueRate != null" >
        Value_Rate,
      </if>
      <if test="examedCount != null" >
        Examed_Count,
      </if>
      <if test="createTime != null" >
        Create_time,
      </if>
      <if test="examPaperName != null" >
        Exam_paper_name,
      </if>
      <if test="limitTime != null" >
        limit_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="examPaperId != null" >
        #{examPaperId,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="valueRate != null" >
        #{valueRate,jdbcType=REAL},
      </if>
      <if test="examedCount != null" >
        #{examedCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examPaperName != null" >
        #{examPaperName,jdbcType=VARCHAR},
      </if>
      <if test="limitTime != null" >
        #{limitTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.graduation.pro.study_system.pojo.ExamPaperExample" resultType="java.lang.Integer" >
    select count(*) from exam_paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exam_paper
    <set >
      <if test="record.examPaperId != null" >
        Exam_paper_id = #{record.examPaperId,jdbcType=INTEGER},
      </if>
      <if test="record.creator != null" >
        Creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.valueRate != null" >
        Value_Rate = #{record.valueRate,jdbcType=REAL},
      </if>
      <if test="record.examedCount != null" >
        Examed_Count = #{record.examedCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        Create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.examPaperName != null" >
        Exam_paper_name = #{record.examPaperName,jdbcType=VARCHAR},
      </if>
      <if test="record.limitTime != null" >
        limit_time = #{record.limitTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exam_paper
    set Exam_paper_id = #{record.examPaperId,jdbcType=INTEGER},
      Creator = #{record.creator,jdbcType=VARCHAR},
      Value_Rate = #{record.valueRate,jdbcType=REAL},
      Examed_Count = #{record.examedCount,jdbcType=INTEGER},
      Create_time = #{record.createTime,jdbcType=TIMESTAMP},
      Exam_paper_name = #{record.examPaperName,jdbcType=VARCHAR},
      limit_time = #{record.limitTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduation.pro.study_system.pojo.ExamPaper" >
    update exam_paper
    <set >
      <if test="creator != null" >
        Creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="valueRate != null" >
        Value_Rate = #{valueRate,jdbcType=REAL},
      </if>
      <if test="examedCount != null" >
        Examed_Count = #{examedCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        Create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examPaperName != null" >
        Exam_paper_name = #{examPaperName,jdbcType=VARCHAR},
      </if>
      <if test="limitTime != null" >
        limit_time = #{limitTime,jdbcType=INTEGER},
      </if>
    </set>
    where Exam_paper_id = #{examPaperId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduation.pro.study_system.pojo.ExamPaper" >
    update exam_paper
    set Creator = #{creator,jdbcType=VARCHAR},
      Value_Rate = #{valueRate,jdbcType=REAL},
      Examed_Count = #{examedCount,jdbcType=INTEGER},
      Create_time = #{createTime,jdbcType=TIMESTAMP},
      Exam_paper_name = #{examPaperName,jdbcType=VARCHAR},
      limit_time = #{limitTime,jdbcType=INTEGER}
    where Exam_paper_id = #{examPaperId,jdbcType=INTEGER}
  </update>
</mapper>